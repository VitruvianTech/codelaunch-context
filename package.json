{
  "name": "@codelaunch/context",
  "version": "0.1.0",
  "canonical": "CodeLaunch™",
  "description": "The Rapid-Fire App Compiler™",
  "homepage": "https://codelaunch.site",
  "theme": "#292929",
  "private": true,
  "css": [],
  "scripts": {
    "dc": "COMPOSE_PROJECT_NAME=$(echo ${npm_package_name} | sed 's/@//' | sed 's/\\//-/') docker-compose",
    "log": "yarn dc logs -f --tail 150",
    "clean:codelaunch": "docker rmi $(docker images --format '{{.Repository}}:{{.Tag}}' registry.gitlab.com/vitruviantech/codelaunch/platform*) -f; true",
    "codelaunch": "yarn dc exec codelaunch codelaunch",
    "setup": "touch .env; mkdir -p output;",
    "stop": "yarn dc stop",
    "start": "yarn stop; npm i ---prefer-offline --non-interactive --no-fund --no-audit --silent && yarn setup && yarn dc up -d --remove-orphans --force-recreate && yarn log codelaunch",
    "start:reset": "yarn stop; npm i ---prefer-offline --non-interactive --no-fund --no-audit --silent && yarn setup && yarn dc up -d --remove-orphans --force-recreate -V && yarn log codelaunch",
    "http:reload": "yarn dc exec codelaunch nginx -s stop; yarn dc exec codelaunch nginx",
    "gql:clean": "rm -rf context/assets/graphql/*",
    "gql:generate": "yarn dc exec codelaunch npx graphql-codegen",
    "test:build": "docker rm $(echo ${npm_package_name}_build | sed 's/@//' | sed 's/\\//_/') 2> /dev/null || true && yarn dc stop && yarn setup && touch npm.rc && docker run -it --env-file=.env -e API_HOST=$API_HOST -e APPS=$APPS -e SKIP_APP_FILE=$SKIP_APP_FILE -e ABORT_ON=$ABORT_ON -e VERBOSE=$VERBOSE -e ENV=testing --name $(echo ${npm_package_name}_build | sed 's/@//' | sed 's/\\//_/') -u node:node --mount type=bind,source=\"$(pwd)\"/npm.rc,target=/srv/codelaunch/.npmrc --mount type=bind,source=\"$(pwd)\"/context,target=/srv/codelaunch/context --mount type=bind,source=\"$(pwd)\"/nginx.conf,target=/srv/codelaunch/nginx.conf --mount type=bind,source=\"$(pwd)\"/config.ts,target=/srv/codelaunch/config.ts --mount type=bind,source=\"$(pwd)\"/tsconfig.json,target=/srv/codelaunch/tsextends.json --mount type=bind,source=\"$(pwd)\"/package.json,target=/srv/codelaunch/.context.json --mount type=bind,source=\"$(pwd)\"/jobs.json,target=/srv/codelaunch/.jobs.json --mount type=bind,source=\"$(pwd)\"/output,target=/srv/codelaunch/output --mount type=bind,source=\"$(pwd)/${APP_FILE:-apps.json}\",target=/srv/codelaunch/apps.json ${IMAGE:-registry.gitlab.com/vitruviantech/codelaunch/platform}:${VERSION:-2023.0.0-rc.1} codelaunch image && docker commit $(echo ${npm_package_name}_build | sed 's/@//' | sed 's/\\//_/') $(echo ${npm_package_name} | sed 's/@//'):${npm_package_version}.$(git rev-parse --short HEAD)-TESTING > /dev/null; docker rm $(echo ${npm_package_name}_build | sed 's/@//' | sed 's/\\//_/') > /dev/null",
    "test:data": "docker run --rm -d -e POSTGRES_HOST_AUTH_METHOD=trust -p 5432:5432 --name $(echo ${npm_package_name}_data | sed 's/@//' | sed 's/\\//_/') vitruviantech/postgis:13-master",
    "test:queue": "docker run --rm -d -p 6379:6379 --name $(echo ${npm_package_name}_queue | sed 's/@//' | sed 's/\\//_/') redis:alpine",
    "test:start": "docker run --rm -it --env-file=.env -e VERBOSE=$VERBOSE -e ENV=testing -e ABORT_ON=${ABORT_ON:-failed_migration} -e QUEUE_URL=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(echo ${npm_package_name}_queue | sed 's/@//' | sed 's/\\//_/')) -e DATABASE_SOURCE_URL=postgresql://postgres@$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(echo ${npm_package_name}_data | sed 's/@//' | sed 's/\\//_/')):5432/postgres -p ${PORT:-8080}:80 --name $(echo ${npm_package_name} | sed 's/@//' | sed 's/\\//_/')_codelaunch $(echo ${npm_package_name} | sed 's/@//'):${TAG:-${npm_package_version}.$(git rev-parse --short HEAD)-TESTING} codelaunch start",
    "test:stop": "docker kill $(echo ${npm_package_name}_codelaunch | sed 's/@//' | sed 's/\\//_/'); docker kill $(echo ${npm_package_name}_data | sed 's/@//' | sed 's/\\//_/'); docker kill $(echo ${npm_package_name}_queue | sed 's/@//' | sed 's/\\//_/'); true",
    "test:list": "docker images --format '{{.Repository}}:{{.Tag}}' $(echo ${npm_package_name} | sed 's/@//')",
    "test:clean": "docker rmi $(docker images --format '{{.Repository}}:{{.Tag}}' $(echo ${npm_package_name} | sed 's/@//')); true",
    "build": "yarn setup && touch npm.rc && docker run -it -e API_HOST=$API_HOST -e APPS=$APPS -e SKIP_APP_FILE=$SKIP_APP_FILE -e ABORT_ON=$ABORT_ON -e VERBOSE=$VERBOSE --name $(echo ${npm_package_name}_build | sed 's/@//' | sed 's/\\//_/') -u node:node --mount type=bind,source=\"$(pwd)\"/npmrc,target=/srv/codelaunch/.npmrc --mount type=bind,source=\"$(pwd)\"/context,target=/srv/codelaunch/context --mount type=bind,source=\"$(pwd)\"/nginx.conf,target=/srv/codelaunch/nginx.conf --mount type=bind,source=\"$(pwd)\"/config.ts,target=/srv/codelaunch/config.ts --mount type=bind,source=\"$(pwd)\"/tsconfig.json,target=/srv/codelaunch/tsextends.json --mount type=bind,source=\"$(pwd)\"/package.json,target=/srv/codelaunch/.context.json --mount type=bind,source=\"$(pwd)\"/jobs.json,target=/srv/codelaunch/.jobs.json --mount type=bind,source=\"$(pwd)\"/output,target=/srv/codelaunch/output --mount type=bind,source=\"$(pwd)/${APP_FILE:-apps.json}\",target=/srv/codelaunch/apps.json registry.gitlab.com/vitruviantech/codelaunch/platform:${VERSION:-2023.0.0-rc.1} codelaunch image && docker commit $(echo ${npm_package_name}_build | sed 's/@//' | sed 's/\\//_/') $(echo ${npm_package_name} | sed 's/@//'):${npm_package_version} > /dev/null; docker rm $(echo ${npm_package_name}_build | sed 's/@//' | sed 's/\\//_/') > /dev/null",
    "destroy": "yarn dc down -v && docker volume prune -f"
  },
  "devDependencies": {
    "@types/node": "^17.0.39",
    "@urql/exchange-graphcache": "^4.3.6",
    "@urql/vue": "^0.6.1",
    "graphile-utils": "^4.12.2",
    "h3": "^0.7.10",
    "ioredis": "^5.1.0",
    "node-fetch": "^3.2.0",
    "uuid": "^8.3.2",
    "vuetify": "^3.0.0-beta.8"
  }
}
